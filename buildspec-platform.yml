version: 0.2

env:
  shell: /bin/bash
  secrets-manager:
    DOCKERHUB_PASSWORD: dockerhub/password
    DOCKERHUB_USERNAME: dockerhub/username

phases:
  install:
    commands:
      - if [ -z ${AWS_ACCOUNT_ID+x} ]; then AWS_ACCOUNT_ID=$(aws sts get-caller-identity | jq -r .Account); fi
      - REGISTRY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION:-$AWS_DEFAULT_REGION}.amazonaws.com/
      - DH_REPO=${REGISTRY_URI}docker-hub
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${REGISTRY_URI}

      - export BUILDX_VERSION=$(curl --silent "https://api.github.com/repos/docker/buildx/releases/latest" | jq -r .tag_name)
      - curl -JLO "https://github.com/docker/buildx/releases/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.linux-${ARCH:-amd64}"
      - mkdir -p ~/.docker/cli-plugins
      - mv "buildx-$BUILDX_VERSION.linux-${ARCH:-amd64}" ~/.docker/cli-plugins/docker-buildx
      - chmod +x ~/.docker/cli-plugins/docker-buildx
      # - docker run --privileged --rm ${DH_REPO}/tonistiigi/binfmt --install arm64 amd64
      # - docker buildx create --name container-builder --driver docker-container --use --bootstrap
  build:
    commands:
      - echo Logging in to Docker Hub...
      - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASSWORD
      - echo Logging in to ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${REGISTRY_URI}
      - echo "Build started on `date` ($(git rev-parse HEAD | cut -c -8))"
      - echo Building the Docker image...
      - echo Using base image ${DH_REPO}/library/php
      # - docker buildx bake --builder=container-builder --progress=plain --set 'php*.args.BASE_IMAGE'=${DH_REPO}/library/php --push
      - docker buildx bake --provenance=false --progress=plain --set 'php*.args.BASE_IMAGE'=${DH_REPO}/library/php --push
      # - docker buildx bake --provenance=false --progress=plain --push
  post_build:
    commands:
      - echo Build completed at `date`
